{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thinkpad\\\\source\\\\Projects\\\\JobHunt\\\\frontend\\\\src\\\\components\\\\Recruiter\\\\CreateJob.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass CreateJob extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let titleError = \"\";\n      let typeError = \"\";\n      let durationError = \"\";\n      let salaryError = \"\";\n      let addressError = \"\";\n      let deadlineError = \"\";\n      let appmaxError = \"\";\n\n      if (this.state.title === \"\") {\n        titleError = \"Title cannot be blank\";\n      }\n\n      if (this.state.type === \"\") {\n        typeError = \"Select type of job\";\n      }\n\n      if (this.state.duration === -1) {\n        durationError = \"Select duration of job\";\n      }\n\n      if (this.state.salary === -1) {\n        salaryError = \"Enter Salary\";\n      }\n\n      if (this.state.address === \"\") {\n        addressError = \"Address cannot be blank\";\n      }\n\n      if (new Date(this.state.deadline) < new Date().getTime()) {\n        deadlineError = \"Deadline cannot be before tomorrow\";\n      }\n\n      if (this.state.appmax < this.state.posmax) {\n        appmaxError = \"Maximum number of applications cannot be less than maximum number of positions.\";\n      }\n\n      if (titleError || typeError || durationError || salaryError || addressError || deadlineError || appmaxError) {\n        this.setState({\n          titleError,\n          typeError,\n          durationError,\n          salaryError,\n          addressError,\n          deadlineError,\n          appmaxError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let euser = this.state;\n      euser.skills = this.state.skillstr.split(',');\n\n      if (euser.durationstr !== \"\") {\n        euser.duration = parseInt(euser.durationstr);\n      }\n\n      const newJob = {\n        recruiter: this.state.userdetails,\n        recruiterName: this.state.userdetails.name,\n        title: euser.title,\n        description: euser.description,\n        type: euser.type,\n        duration: euser.duration,\n        salary: euser.salary,\n        posmax: euser.posmax,\n        appmax: euser.appmax,\n        numpos: euser.numpos,\n        numapp: euser.numapp,\n        app: euser.app,\n        address: euser.address,\n        skills: euser.skills,\n        rating: euser.rating,\n        numrate: euser.numrate,\n        dateOfPost: euser.dateOfPost,\n        deadline: euser.deadline\n      };\n      const isValid = this.validate();\n\n      if (isValid) {\n        axios.post('http://localhost:4000/job/add_job', newJob).then(response => {\n          console.log(newJob);\n          alert(\"Job added successfully!\"); // to refresh\n\n          this.props.history.push(\"/viewMyActiveJobs\");\n          this.props.history.push(\"/viewMyActiveJobs\");\n          this.props.history.goBack();\n        }).catch(function (error) {\n          console.log(error);\n          alert(\"Job NOT added successfully!\");\n        });\n      }\n    };\n\n    this.state = {\n      userdetails: [],\n      recruiter: [],\n      recruiterName: \"\",\n      title: \"\",\n      titleError: \"\",\n      description: \"\",\n      type: \"\",\n      typeError: \"\",\n      duration: -1,\n      durationError: \"\",\n      durationstr: \"\",\n      salary: -1,\n      salaryError: \"\",\n      posmax: 1,\n      appmax: 10,\n      appmaxError: \"\",\n      numpos: 0,\n      numapp: 0,\n      app: 0,\n      address: \"\",\n      addressError: \"\",\n      skills: [],\n      skillstr: \"\",\n      rating: 0,\n      numrate: 0,\n      dateOfPost: new Date(),\n      // default 100 days from now\n      deadline: new Date(new Date().getTime() + 100 * 24 * 60 * 60 * 1000),\n      deadlineError: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const user = this.state;\n    const userRole = this.state.userdetails.role;\n    let AddJob;\n\n    if (userRole === \"recruiter\") {\n      AddJob = React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.title,\n        id: \"title\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.state.titleError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.description,\n        id: \"description\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        value: this.state.type,\n        onChange: this.onChange,\n        id: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Select type\"), React.createElement(\"option\", {\n        value: \"fullTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Full-time\"), React.createElement(\"option\", {\n        value: \"partTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Part-time\"), React.createElement(\"option\", {\n        value: \"wfh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Work from home\")), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, this.state.typeError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"salary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Salary\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.salary,\n        id: \"salary\",\n        type: \"number\",\n        min: \"-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, this.state.salaryError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"durationstr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Duration\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        value: this.state.durationstr,\n        onChange: this.onChange,\n        id: \"durationstr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Select duration\"), React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Indefinite\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"1 month\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"2 months\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"3 months\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"4 months\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"5 months\"), React.createElement(\"option\", {\n        value: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"6 months\")), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, this.state.durationError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"posmax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Max. no. of positions available\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.posmax,\n        id: \"posmax\",\n        type: \"number\",\n        min: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"appmax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Max. total no. applications allowed\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.appmax,\n        id: \"appmax\",\n        type: \"number\",\n        min: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, this.state.appmaxError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.address,\n        id: \"address\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, this.state.addressError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"skillstr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.skillstr,\n        id: \"skillstr\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"deadline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Deadline (default: 100 days from now)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.deadline,\n        id: \"deadline\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, this.state.deadlineError)), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\"\n        },\n        type: \"submit\",\n        className: \"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Add Job\")));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, AddJob))))));\n  }\n\n}\n\nCreateJob.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(CreateJob);","map":{"version":3,"sources":["C:/Users/thinkpad/source/Projects/JobHunt/frontend/src/components/Recruiter/CreateJob.js"],"names":["React","Component","axios","Card","PropTypes","connect","CreateJob","constructor","props","validate","titleError","typeError","durationError","salaryError","addressError","deadlineError","appmaxError","state","title","type","duration","salary","address","Date","deadline","getTime","appmax","posmax","setState","onChange","e","target","id","value","onSubmit","preventDefault","euser","skills","skillstr","split","durationstr","parseInt","newJob","recruiter","userdetails","recruiterName","name","description","numpos","numapp","app","rating","numrate","dateOfPost","isValid","post","then","response","console","log","alert","history","push","goBack","catch","error","componentDidMount","user","auth","get","data","componentWillReceiveProps","nextProps","errors","render","userRole","role","AddJob","fontSize","color","paddingLeft","width","borderRadius","letterSpacing","marginTop","height","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CreateJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userdetails: [],\r\n            recruiter: [],\r\n            recruiterName: \"\",\r\n            title: \"\",\r\n            titleError: \"\",\r\n            description: \"\",\r\n            type: \"\",\r\n            typeError: \"\",\r\n            duration: -1,\r\n            durationError: \"\",\r\n            durationstr: \"\",\r\n            salary: -1,\r\n            salaryError: \"\",\r\n            posmax: 1,\r\n            appmax: 10,\r\n            appmaxError: \"\",\r\n            numpos: 0,\r\n            numapp: 0,\r\n            app: 0,\r\n            address: \"\",\r\n            addressError: \"\",\r\n            skills: [],\r\n            skillstr: \"\",\r\n            rating: 0,\r\n            numrate: 0,\r\n            dateOfPost: new Date(),\r\n            // default 100 days from now\r\n            deadline: new Date(new Date().getTime()+(100*24*60*60*1000)),\r\n            deadlineError: \"\",\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4000/user/'+ user.id)\r\n             .then(response => {\r\n                 this.setState({userdetails: response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    validate = () => {\r\n        let titleError = \"\";\r\n        let typeError = \"\";\r\n        let durationError = \"\";\r\n        let salaryError = \"\";\r\n        let addressError = \"\";\r\n        let deadlineError = \"\";\r\n        let appmaxError = \"\";\r\n\r\n    \r\n        if (this.state.title === \"\") {\r\n          titleError = \"Title cannot be blank\";\r\n        }\r\n\r\n        if (this.state.type === \"\") {\r\n            typeError = \"Select type of job\";\r\n        }\r\n\r\n        if (this.state.duration === -1) {\r\n            durationError = \"Select duration of job\";\r\n        }\r\n\r\n        if (this.state.salary === -1) {\r\n            salaryError = \"Enter Salary\";\r\n        }\r\n    \r\n        if (this.state.address === \"\") {\r\n            addressError = \"Address cannot be blank\";\r\n        }\r\n\r\n        if (new Date(this.state.deadline) < new Date().getTime()) {\r\n            deadlineError = \"Deadline cannot be before tomorrow\";\r\n        }\r\n\r\n        if (this.state.appmax < this.state.posmax) {\r\n            appmaxError = \"Maximum number of applications cannot be less than maximum number of positions.\";\r\n        }\r\n    \r\n        if (titleError || typeError || durationError || salaryError\r\n            || addressError || deadlineError || appmaxError) {\r\n            this.setState({ titleError, typeError, durationError, salaryError, addressError, deadlineError, appmaxError });\r\n            return false;\r\n        }\r\n    \r\n        return true;\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n            errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        let euser = this.state;\r\n        euser.skills = this.state.skillstr.split(',');\r\n        if(euser.durationstr !== \"\")\r\n        {\r\n            euser.duration = parseInt(euser.durationstr);\r\n        }\r\n        const newJob = {\r\n            recruiter: this.state.userdetails,\r\n            recruiterName: this.state.userdetails.name,\r\n            title: euser.title,\r\n            description: euser.description,\r\n            type: euser.type,\r\n            duration: euser.duration,\r\n            salary: euser.salary,\r\n            posmax: euser.posmax,\r\n            appmax: euser.appmax,\r\n            numpos: euser.numpos,\r\n            numapp: euser.numapp,\r\n            app: euser.app,\r\n            address: euser.address,\r\n            skills: euser.skills,\r\n            rating: euser.rating,\r\n            numrate: euser.numrate,\r\n            dateOfPost: euser.dateOfPost,\r\n            deadline: euser.deadline\r\n        };\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            axios\r\n                .post('http://localhost:4000/job/add_job', newJob)\r\n                .then(response => {\r\n                    console.log(newJob);\r\n                    alert(\"Job added successfully!\");\r\n                    // to refresh\r\n                    this.props.history.push(\"/viewMyActiveJobs\");\r\n                    this.props.history.push(\"/viewMyActiveJobs\");\r\n                    this.props.history.goBack();\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                    alert(\"Job NOT added successfully!\");\r\n                })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const user = this.state;\r\n        const userRole = this.state.userdetails.role;\r\n        let AddJob;\r\n        if(userRole === \"recruiter\") {\r\n            AddJob = \r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"title\">Title</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.title}\r\n                        id=\"title\"\r\n                        type=\"text\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.titleError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"description\">Description</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.description}\r\n                        id=\"description\"\r\n                        type=\"text\"\r\n                    />\r\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.nameError}\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"type\">Type</label><br></br>\r\n                    <select \r\n                        value={this.state.type} \r\n                        onChange={this.onChange}\r\n                        id=\"type\"\r\n                    >\r\n                        <option value=\"\">Select type</option>\r\n                        <option value=\"fullTime\">Full-time</option>\r\n                        <option value=\"partTime\">Part-time</option>\r\n                        <option value=\"wfh\">Work from home</option>\r\n                    </select>\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.typeError}\r\n                    </div>\r\n                </div> \r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"salary\">Salary</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.salary}\r\n                        id=\"salary\"\r\n                        type=\"number\"\r\n                        min=\"-1\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.salaryError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"durationstr\">Duration</label><br></br>\r\n                    <select \r\n                        value={this.state.durationstr} \r\n                        onChange={this.onChange}\r\n                        id=\"durationstr\"\r\n                    >\r\n                        <option value=\"\">Select duration</option>\r\n                        <option value = \"0\" >Indefinite</option>\r\n                        <option value=\"1\">1 month</option>\r\n                        <option value=\"2\">2 months</option>\r\n                        <option value=\"3\">3 months</option>\r\n                        <option value=\"4\">4 months</option>\r\n                        <option value=\"5\">5 months</option>\r\n                        <option value=\"6\">6 months</option>\r\n                    </select>\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.durationError}\r\n                    </div>\r\n                </div> \r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"posmax\">Max. no. of positions available</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.posmax}\r\n                        id=\"posmax\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                    />\r\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.nameError}\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"appmax\">Max. total no. applications allowed</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.appmax}\r\n                        id=\"appmax\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.appmaxError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"address\">Address</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.address}\r\n                        id=\"address\"\r\n                        type=\"text\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.addressError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"skillstr\">Skills</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.skillstr}\r\n                        id=\"skillstr\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"deadline\">Deadline (default: 100 days from now)</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.deadline}\r\n                        id=\"deadline\"\r\n                        type=\"date\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.deadlineError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                    <button\r\n                        style={{\r\n                        width: \"150px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                    >\r\n                        Add Job\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }\r\n        \r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <Card style={{ width: '100%' }}>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    {AddJob}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreateJob.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(CreateJob);"]},"metadata":{},"sourceType":"module"}